[{"C:\\Users\\91727\\Videos\\musicmaster\\src\\index.js":"1","C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\App.js":"2","C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\Artist.js":"3","C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\Tracks.js":"4","C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\Search.js":"5"},{"size":185,"mtime":1610463698007,"results":"6","hashOfConfig":"7"},{"size":1141,"mtime":1610463698003,"results":"8","hashOfConfig":"7"},{"size":551,"mtime":1610463698004,"results":"9","hashOfConfig":"7"},{"size":1649,"mtime":1611163953385,"results":"10","hashOfConfig":"7"},{"size":725,"mtime":1610463698004,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10q077i",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\91727\\Videos\\musicmaster\\src\\index.js",[],["24","25"],"C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\App.js",[],"C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\Artist.js",[],"C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\Tracks.js",["26"],"import React, { Component } from 'react';\r\n\r\nclass Tracks extends Component {\r\n  state = { playing: false, audio: null, playingPreviewUrl: null };\r\n\r\n  playAudio = previewUrl => () => {\r\n    const audio = new Audio(previewUrl);\r\n\r\n    if (!this.state.playing) {\r\n      audio.play();\r\n      this.setState({ playing: true, audio, playingPreviewUrl: previewUrl });\r\n    } else {\r\n      this.state.audio.play();\r\n\r\n      if (this.state.playingPreviewUrl === previewUrl) {\r\n        this.setState({ playing: false });\r\n      } else {\r\n        audio.play();\r\n        this.setState({ audio, playingPreviewUrl: previewUrl });\r\n      }\r\n    }\r\n  }\r\n\r\n  trackIcon = track => {\r\n    if (!track.preview_url) {\r\n      return <span>N/A</span>;\r\n    }\r\n\r\n    if (\r\n      this.state.playing &&\r\n      this.state.playingPreviewUrl === track.preview_url\r\n    ) {\r\n      return <span>| |</span>;\r\n    }\r\n\r\n    return <span>&#9654;</span>;\r\n  }\r\n\r\n  render() {\r\n    const { tracks } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          tracks.map(track => {\r\n            const { id, name, album, preview_url } = track;\r\n\r\n            return (\r\n              <div\r\n                key={id}\r\n                onClick={this.playAudio(preview_url)}\r\n                className='track'\r\n              >\r\n               <img src={album.images[0].url}  alt='track-image' className='track-image' />\r\n\r\n                \r\n                <p className='track-text'>{name}</p>\r\n                <p className='track-icon'>{this.trackIcon(track)}</p>\r\n\r\n\r\n              </div>\r\n            )\r\n          })\r\n\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","C:\\Users\\91727\\Videos\\musicmaster\\src\\components\\Search.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":54,"column":16,"nodeType":"33","endLine":54,"endColumn":92},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]